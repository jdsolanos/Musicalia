package Musicalia.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptNote = createDescriptorForNote();
  /*package*/ final ConceptDescriptor myConceptTrack = createDescriptorForTrack();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptNote, myConceptTrack);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Note:
        return myConceptNote;
      case LanguageConceptSwitch.Track:
        return myConceptTrack;
      default:
        return null;
    }
  }


  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForNote() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Musicalia", "Note", 0xfacd1bcb238e4516L, 0xac8e014cb29975deL, 0x4665f62f67c186b6L);
    b.class_(false, false, false);
    b.origin("r:7510d4b9-4617-454f-869c-a08e1ea38799(Musicalia.structure)/5072731238767363766");
    b.version(3);
    b.property("duration", 0x4665f62f67c2bb42L).type(PrimitiveTypeId.INTEGER).origin("5072731238767442754").done();
    b.property("volume", 0x47b968419c89932cL).type(PrimitiveTypeId.INTEGER).origin("5168276678392779564").done();
    b.property("pitch", 0x7c22576524f6006aL).type(PrimitiveTypeId.STRING).origin("8944807901834641514").done();
    b.property("bend", 0x7c22576524f60080L).type(PrimitiveTypeId.INTEGER).origin("8944807901834641536").done();
    b.property("octave", 0x301a25a9d1488b45L).type(PrimitiveTypeId.INTEGER).origin("3466124274505911109").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTrack() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Musicalia", "Track", 0xfacd1bcb238e4516L, 0xac8e014cb29975deL, 0x4665f62f67c2bb2dL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.parent(0x4caf0310491e41f5L, 0x8a9b2006b3a94898L, 0x40c1a7cb987d20d5L);
    b.origin("r:7510d4b9-4617-454f-869c-a08e1ea38799(Musicalia.structure)/5072731238767442733");
    b.version(3);
    b.property("bpm", 0x47b968419c899319L).type(PrimitiveTypeId.INTEGER).origin("5168276678392779545").done();
    b.aggregate("notes", 0x4665f62f67c2bb38L).target(0xfacd1bcb238e4516L, 0xac8e014cb29975deL, 0x4665f62f67c186b6L).optional(true).ordered(true).multiple(true).origin("5072731238767442744").done();
    b.alias("track");
    return b.create();
  }
}
